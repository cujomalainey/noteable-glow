/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sat Jan 28 14:05:20 2017. */

#ifndef PB_AUDIO_PB_H_INCLUDED
#define PB_AUDIO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _audioMessage {
    pb_size_t data_count;
    uint32_t data[60];
/* @@protoc_insertion_point(struct:audioMessage) */
} audioMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define audioMessage_init_default                {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define audioMessage_init_zero                   {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define audioMessage_data_tag                    1

/* Struct field encoding specification for nanopb */
extern const pb_field_t audioMessage_fields[2];

/* Maximum encoded size of messages (where known) */
#define audioMessage_size                        360

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define AUDIO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
